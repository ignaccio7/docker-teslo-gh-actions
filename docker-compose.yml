
services:

  app:
  
    build:
      context: ./
      target: ${STAGE} # Este es el target que se va usar y lo buscara en nuestro dockerfile
      dockerfile: Dockerfile # Aqui podemos indicar el dockerfile que vamos a usar podria ser otro nombre depende de lo que queramos
    volumes:
      - .:/app/      
      - /app/node_modules # Este seria el mapeo adicional que en caso que no tengamos el node modules de lado de docker lo mapearemos al nuestro
    # command: npm run start:dev Tambien se podria ejecutar aqui el comando para correr el contenedor 
    container_name: nest-app
    ports:
      - "${PORT}:${PORT}"
    environment:
      APP_VERSION: ${APP_VERSION}
      STAGE: ${STAGE}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USERNAME: ${DB_USERNAME}
      PORT: ${PORT}
      HOST_API: ${HOST_API}
      JWT_SECRET: ${JWT_SECRET}
  
  db:
    image: postgres:16.3-alpine3.20
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    container_name: ${DB_NAME}
    volumes:
      - postgres-db:/var/lib/postgresql/data


volumes:
  postgres-db:
    external: false